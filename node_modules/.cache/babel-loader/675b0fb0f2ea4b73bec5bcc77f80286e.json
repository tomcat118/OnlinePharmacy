{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanpang/OnlinePharmacy/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport Prescription from './components/Prescription';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Signin() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [loading, setLoading] = useState(false);\n  const currentUser = useAuth();\n\n  async function handleSignup() {\n    setLoading(true);\n\n    try {\n      await signup(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      alert(\"Error!\");\n    }\n\n    setLoading(false);\n  }\n\n  async function handleLogout() {\n    setLoading(true);\n\n    try {\n      await logOut();\n    } catch {\n      alert(\"error\");\n    }\n\n    setLoading(false);\n  }\n\n  async function handleSignin() {\n    setLoading(true);\n\n    try {\n      await login(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      alert(\"Error!\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    /*#__PURE__*/\n\n    /*\n    \n    <div id = \"main\">\n     \n      <div> CURRENTLY LOGGED IN AS {currentUser?.email} </div>\n      <div id = \"fields\">\n      <input ref={emailRef} placeholder =\"Email\" />\n      <input ref={passwordRef} type = \"password\" placeholder = \"Password\" />\n     \n       </div>\n      <button disabled ={loading || currentUser!=null} onClick={handleSignup}>Sign UP</button>\n      <button disabled ={loading || !currentUser} onClick={ handleLogout} > Log Out </button>\n      <button disabled ={loading || currentUser} onClick={ handleSignin} > Login in </button>\n      </div>\n    */\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Prescription, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)\n  );\n}\n\n_s(Signin, \"Ir69Goi/BzlyXDP+eVmLz979eIk=\", true);\n\n_c = Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/Users/jonathanpang/OnlinePharmacy/src/App.js"],"names":["useRef","useState","Prescription","Signin","emailRef","passwordRef","loading","setLoading","currentUser","useAuth","handleSignup","signup","current","value","alert","handleLogout","logOut","handleSignin","login"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,QAAhB,QAA+B,OAA/B;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAC9B,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AACA,QAAMK,WAAW,GAAGL,MAAM,EAA1B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMO,WAAW,GAAGC,OAAO,EAA3B;;AAEA,iBAAeC,YAAf,GAA6B;AAC3BH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACD,YAAMI,MAAM,CAACP,QAAQ,CAACQ,OAAT,CAAiBC,KAAlB,EAAyBR,WAAW,CAACO,OAAZ,CAAoBC,KAA7C,CAAZ;AACD,KAFD,CAGA,MAAM;AACJC,MAAAA,KAAK,CAAC,QAAD,CAAL;AACD;;AACDP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,iBAAeQ,YAAf,GAA6B;AAC3BR,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACD,YAAMS,MAAM,EAAZ;AACD,KAFD,CAGA,MAAK;AACHF,MAAAA,KAAK,CAAC,OAAD,CAAL;AACD;;AAEDP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,iBAAeU,YAAf,GAA6B;AAC3BV,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACD,YAAMW,KAAK,CAACd,QAAQ,CAACQ,OAAT,CAAiBC,KAAlB,EAAyBR,WAAW,CAACO,OAAZ,CAAoBC,KAA7C,CAAX;AACD,KAFD,CAGA,MAAM;AACJC,MAAAA,KAAK,CAAC,QAAD,CAAL;AACD;;AACDP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED;AAAA;;AAEE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIG;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AApBD;AAyBD;;GAjEuBJ,M;;KAAAA,M","sourcesContent":["import {useRef, useState} from 'react';\n\nimport Prescription from './components/Prescription';\n\nexport default function Signin(){\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [loading, setLoading] = useState(false);\n  const currentUser = useAuth();\n\n  async function handleSignup(){\n    setLoading(true);\n    try{\n      await signup(emailRef.current.value, passwordRef.current.value);\n    }\n    catch {\n      alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  async function handleLogout(){\n    setLoading(true);\n    try{\n      await logOut();\n    }\n    catch{\n      alert(\"error\");\n    }\n\n    setLoading(false);\n  }\n\n  async function handleSignin(){\n    setLoading(true);\n    try{\n      await login(emailRef.current.value, passwordRef.current.value);\n    }\n    catch {\n      alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  return (\n\n    /*\n    \n    <div id = \"main\">\n     \n      <div> CURRENTLY LOGGED IN AS {currentUser?.email} </div>\n      <div id = \"fields\">\n      <input ref={emailRef} placeholder =\"Email\" />\n      <input ref={passwordRef} type = \"password\" placeholder = \"Password\" />\n     \n\n      </div>\n      <button disabled ={loading || currentUser!=null} onClick={handleSignup}>Sign UP</button>\n      <button disabled ={loading || !currentUser} onClick={ handleLogout} > Log Out </button>\n      <button disabled ={loading || currentUser} onClick={ handleSignin} > Login in </button>\n\n\n    </div>\n    */\n   <div>\n     <Prescription/>\n   </div>\n\n  );\n}"]},"metadata":{},"sourceType":"module"}